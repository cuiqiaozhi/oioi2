export declare const camelCase: <T>(source: T) => T;
export declare const paramCase: <T>(source: T) => T;
export declare const snakeCase: <T>(source: T) => T;
export declare const camelize: <T>(source: T) => T;
export declare const hyphenate: <T>(source: T) => T;
export declare function capitalize(source: string): string;
export declare const interpolate: (template: string, context: object, pattern?: RegExp) => string;
export declare function escapeRegExp(source: string): string;
export declare function trimSlash(source: string): string;
export declare function sanitize(source: string): string;
export declare function template(path: string | string[], ...params: any[]): string;
export declare namespace template {
    type Node = string | Store;
    interface Store {
        [K: string]: Node;
    }
    function set(path: string, value: Node): void;
    function get(path: string): string;
    function format(source: string, ...params: any[]): string;
    function quote(content: any): string;
    function brace(items: any[]): string;
}
export { template as t };
