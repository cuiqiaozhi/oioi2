"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createApp = exports.getOneBotConfigPath = exports.getBotConfigPath = exports.getAppConfigPath = void 0;
const koa_1 = __importDefault(require("koa"));
const core_1 = require("@oitq/core");
const utils_1 = require("@oitq/utils");
const onebot_1 = require("./onebot");
const router_1 = require("./router");
const quester_1 = require("./quester");
const koa_bodyparser_1 = __importDefault(require("koa-bodyparser"));
const http_1 = require("http");
const path = __importStar(require("path"));
const getAppConfigPath = (dir = process.cwd()) => path.join(dir, 'oitq.config.json');
exports.getAppConfigPath = getAppConfigPath;
const getBotConfigPath = (dir = process.cwd()) => path.join(dir, 'bot.default.json');
exports.getBotConfigPath = getBotConfigPath;
const getOneBotConfigPath = (dir = process.cwd()) => path.join(dir, 'oneBot.default.json');
exports.getOneBotConfigPath = getOneBotConfigPath;
function createApp(options = (0, exports.getAppConfigPath)(core_1.dir)) {
    return new core_1.App(options);
}
exports.createApp = createApp;
__exportStar(require("./onebot"), exports);
__exportStar(require("./router"), exports);
__exportStar(require("./quester"), exports);
__exportStar(require("@oitq/core"), exports);
core_1.Context.service('koa');
core_1.Context.service('router');
core_1.Context.service('http');
core_1.Context.service('httpServer');
const oldPrepare = core_1.App.prototype.prepare;
core_1.App.prototype.prepare = function () {
    this.koa = new koa_1.default(this.options);
    this.router = new router_1.Router({ prefix: this.options.path });
    this.http = quester_1.Quester.create();
    this.koa.use((0, koa_bodyparser_1.default)())
        .use(this.router.routes())
        .use(this.router.allowedMethods());
    this.httpServer = (0, http_1.createServer)(this.koa.callback());
    this.router.get('', (ctx) => {
        ctx.body = 'this is oicq-bots api\n' +
            'use post request to visit `/${uin}/method` to apply bot method,post data will used by method params\n' +
            'use websocket to connect `/uin` to listen bot request/notice';
    });
    this.router.post('/add', async (ctx, next) => {
        if (!ctx.body || Object.keys(ctx.body).length == 0)
            return ctx.body = (0, utils_1.error)('请输入完整bot配置，具体配置见github（BotOptions）');
        await this.addBot(ctx.body);
        ctx.body = (0, utils_1.success)('添加成功');
        await next();
    });
    this.router.get('/remove', async (ctx, next) => {
        const { uin } = ctx.query;
        if (!uin)
            ctx.body = (0, utils_1.error)('请输入uin');
        await this.removeBot(Number(uin));
        await next();
        ctx.body = (0, utils_1.success)('移除成功');
    });
    this.on('bot.add', async (bot) => {
        if (bot.options.oneBot) {
            bot.oneBot = new onebot_1.OneBot(this, bot, typeof bot.options.oneBot === 'boolean' ? onebot_1.defaultOneBotConfig : (0, utils_1.merge)(onebot_1.defaultOneBotConfig, bot.options.oneBot));
            await bot.oneBot.start();
            bot.on('message', bot.oneBot.dispatch.bind(bot.oneBot));
            bot.on('notice', bot.oneBot.dispatch.bind(bot.oneBot));
            bot.on('request', bot.oneBot.dispatch.bind(bot.oneBot));
            bot.on('system', bot.oneBot.dispatch.bind(bot.oneBot));
        }
    });
    this.on('bot.remove', bot => {
        if (bot.oneBot) {
            bot.oneBot.stop();
        }
    });
    oldPrepare.apply(this);
};
const oldStart = core_1.App.prototype.start;
core_1.App.prototype.start = async function (port = this.options.port) {
    if (!port)
        port = 8080;
    this.options.port = port;
    this.httpServer.listen(port, () => {
        this.logger('app').mark('app is listen at http://127.0.0.1:' + port);
    });
    oldStart.apply(this);
};
